apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.db.name }}
spec:
  type: ClusterIP
  ports:
  - name: {{ .Values.db.serviceName }}
    port: {{ .Values.db.port }}
    targetPort: {{ .Values.db.targetPort }}
  selector:
    app: {{ .Values.db.name }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.db.configMap }}
  namespace: {{ .Values.namespace }}
data:
  POSTGRES_DB: votingapp
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.db.name }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
      - image: {{ .Values.dockerRegistry }}/{{ .Values.db.image }}:{{ .Values.db.tag }}
        name: {{ .Values.db.name }}
        envFrom:
        - configMapRef:
            name: {{ .Values.db.configMap }}
        ports:
        - containerPort: {{ .Values.db.port }}
          name: {{ .Values.db.serviceName }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: {{ .Values.db.data }}
      volumes:
      - name: {{ .Values.db.data }}
        emptyDir: {}